import cv2
import numpy as np
import base64
import logging
logger = logging.getLogger(__name__)
patterns = {
    '1': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '2': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '3': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '4': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '5': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },'6': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '7': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '8': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '9': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '10': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '11': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '12': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '13': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '14': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [0, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]])
    },
    '15': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]])
    },'16': {
        'A': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '17': {
        'A': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '18': {
        'A': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '19': {
        'A': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '20': {
        'A': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '21': {
        'A': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '22': {
        'A': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '23': {
        'A': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '24': {
        'A': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '25': {
        'A': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },'26': {
        'A': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '27': {
        'A': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '28': {
        'A': np.array([[1, 1, 0, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '29': {
        'A': np.array([[1, 1, 0, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '30': {
        'A': np.array([[1, 1, 0, 0, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '31': {
        'A': np.array([[1, 1, 0, 0, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [0, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]])
    },
    '32': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    },
    '33': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    },
    '34': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    },
    '35': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    },'36': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    },
    '37': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 1, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 0, 1, 1, 1]]),
        'C': np.array([[1, 0, 1, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 1, 0, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    },
    '38': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    },
    '39': {
        'A': np.array([[1, 1, 1, 1, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 0, 0, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 0, 0, 1, 1]]),
        'C': np.array([[1, 0, 0, 0, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 0],
                       [1, 1, 1, 1, 1]]),
        'D': np.array([[1, 1, 0, 0, 1],
                       [0, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    },
    '40': {
        'A': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 0, 1]]),
        'B': np.array([[1, 1, 0, 1, 1],
                       [1, 1, 1, 1, 0],
                       [0, 1, 0, 1, 0],
                       [1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1]]),
        'C': np.array([[1, 0, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 1],
                       [1, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]]),
        'D': np.array([[1, 1, 1, 1, 1],
                       [1, 1, 1, 1, 1],
                       [0, 1, 0, 1, 0],
                       [0, 1, 1, 1, 1],
                       [1, 1, 0, 1, 1]])
    }

}
# Constants for distance estimation
KNOWN_PLICKER_WIDTH = 0.15  # Width of a Plicker in meters (adjust this based on actual size)
FOCAL_LENGTH = 1000  # Focal length of the camera (you'll need to calibrate this)

def preprocess_image(img):
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    edges = cv2.Canny(blurred, 50, 150)
    return gray, edges

def find_plickers(img, edges):
    contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    plickers = []
    for cnt in contours:
        area = cv2.contourArea(cnt)
        if area > 220:
            peri = cv2.arcLength(cnt, True)
            approx = cv2.approxPolyDP(cnt, 0.09 * peri, True)
            if len(approx) >= 4 and len(approx) <= 6:
                rect = cv2.minAreaRect(cnt)
                box = cv2.boxPoints(rect)
                box = np.int0(box)
                w, h = rect[1]
                aspect_ratio = max(w, h) / min(w, h)
                if 0.7 <= aspect_ratio <= 1.3:
                    plickers.append((box, max(w, h)))
    return plickers

def four_point_transform(image, pts):
    rect = order_points(pts.reshape(4, 2))
    (tl, tr, br, bl) = rect
    widthA = np.sqrt(((br[0] - bl[0]) ** 2) + ((br[1] - bl[1]) ** 2))
    widthB = np.sqrt(((tr[0] - tl[0]) ** 2) + ((tr[1] - tl[1]) ** 2))
    maxWidth = max(int(widthA), int(widthB))
    heightA = np.sqrt(((tr[0] - br[0]) ** 2) + ((tr[1] - br[1]) ** 2))
    heightB = np.sqrt(((tl[0] - bl[0]) ** 2) + ((tl[1] - bl[1]) ** 2))
    maxHeight = max(int(heightA), int(heightB))
    dst = np.array([[0, 0], [maxWidth - 1, 0], [maxWidth - 1, maxHeight - 1], [0, maxHeight - 1]], dtype="float32")
    M = cv2.getPerspectiveTransform(rect, dst)
    warped = cv2.warpPerspective(image, M, (maxWidth, maxHeight))
    return warped

def order_points(pts):
    rect = np.zeros((4, 2), dtype="float32")
    s = pts.sum(axis=1)
    rect[0] = pts[np.argmin(s)]
    rect[2] = pts[np.argmax(s)]
    diff = np.diff(pts, axis=1)
    rect[1] = pts[np.argmin(diff)]
    rect[3] = pts[np.argmax(diff)]
    return rect

def get_plicker_pattern(inner_grid):
    height, width = inner_grid.shape
    cell_height, cell_width = height // 5, width // 5
    pattern = np.zeros((5, 5), dtype=int)
    for i in range(5):
        for j in range(5):
            if (i + 1) * cell_height <= height and (j + 1) * cell_width <= width:
                cell = inner_grid[i * cell_height:(i + 1) * cell_height, j * cell_width:(j + 1) * cell_width]
                pattern[i, j] = 1 if np.mean(cell) < 128 else 0
    return pattern

def compare_patterns(detected_pattern, predefined_pattern):
    if detected_pattern.shape != predefined_pattern.shape:
        return 0
    threshold = 0.99
    weight_matrix = np.ones_like(detected_pattern, dtype=float)
    center = len(weight_matrix) // 2
    weight_matrix[center-1:center+2, center-1:center+2] = 2.0
    matches = (detected_pattern == predefined_pattern) * weight_matrix
    mismatches = (detected_pattern != predefined_pattern) * weight_matrix
    total_weighted = np.sum(weight_matrix)
    weighted_match_ratio = np.sum(matches) / total_weighted
    weighted_mismatch_ratio = np.sum(mismatches) / total_weighted
    final_ratio = weighted_match_ratio - (weighted_mismatch_ratio * 1.5)
    return final_ratio if final_ratio >= threshold else 0

def match_pattern(detected_pattern):
    best_match = (None, None, -float('inf'))
    for name, options in patterns.items():
        for code, predefined_pattern in options.items():
            match_ratio = compare_patterns(detected_pattern, predefined_pattern)
            if match_ratio > best_match[2]:
                best_match = (name, code, match_ratio)
    return (best_match[0], best_match[1]) if best_match[2] > 0 else (None, None)

def estimate_distance(pixel_width):
    distance = (KNOWN_PLICKER_WIDTH * FOCAL_LENGTH) / pixel_width
    return distance
def process_frame(frame, max_students):
    logger.debug(f"process_frame called with max_students: {max_students}")
    gray, edges = preprocess_image(frame)
    plicker_candidates = find_plickers(frame, edges)
    results = []
    for plicker, pixel_width in plicker_candidates:
        if len(results) >= max_students:
            logger.debug(f"Reached max students ({max_students}), stopping processing")
            break  # Stop processing if we've reached the maximum number of students
        warped = four_point_transform(gray, plicker)
        _, warped_bin = cv2.threshold(warped, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)
        pattern = get_plicker_pattern(warped_bin)
        matched_name, matched_code = match_pattern(pattern)
        if matched_name and matched_code:
            distance = estimate_distance(pixel_width)
            results.append({
                'name': matched_name,
                'code': matched_code,
                'distance': distance
            })
            # Draw the contour and text on the frame
            cv2.drawContours(frame, [plicker], -1, (0, 255, 0), 2)
            text = f"{matched_name}: {matched_code}"
            cv2.putText(frame, text, (plicker[0][0], plicker[0][1] - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255,0,0), 2)
    logger.debug(f"process_frame finished, found {len(results)} results")
    return results, frame
def encode_frame(frame):
    _, buffer = cv2.imencode('.jpg', frame)
    jpg_as_text = base64.b64encode(buffer).decode('utf-8')
    return f"data:image/jpeg;base64,{jpg_as_text}"